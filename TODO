This is a list of various changes and optimizations that I plan on doing in the future.

general:

Design the code in such a manner that it can be compiled by both c and c++ compilers. This will mean using macro definitions in order to determine if the code is
being compiled as c++ (and changing the header files accordingly). 

Maximize code reuse. I want to create as many implementation-independent helper functions as I can. An example would be having the c_vector functions call various
utility functions that perform the exact same task no matter the data type. In doing this, the amount of code that is wasted can be minimzed.

c_vector:
I want to eventually have the array allocator round up to the nearest power of 2 and then return twice that many bytes. 

c_map:
Remove the function pointers in the generic_node. They waste memory while also providing no benefit.
